import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from pandas import DataFrame

pd.options.display.width = None
pd.options.display.max_columns = None
pd.set_option('display.max_rows', 3000)
pd.set_option('display.max_columns', 3000)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
sns.set(style="whitegrid")
plt.rcParams['figure.figsize'] = (12, 6)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df: DataFrame = pd.read_csv("../data/kursovik_data.csv")

# –£–¥–∞–ª–µ–Ω–∏–µ —è–≤–Ω–æ –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –∫–æ–ª–æ–Ω–∫–∏
if "Unnamed: 0" in df.columns:
    df.drop(columns=["Unnamed: 0"], inplace=True)

### 1. –û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–ê–ù–ù–´–•
print("üëÅÔ∏è –û–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
print(df.info())

print("\nüìä –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏):")
print(df.describe().T)

### 2. –ê–ù–ê–õ–ò–ó –ü–†–û–ü–£–°–ö–û–í
missing = df.isnull().sum()
missing = missing[missing > 0].sort_values(ascending=False)
print("\nüï≥Ô∏è –ü—Ä–∏–∑–Ω–∞–∫–∏ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏:")
print(missing)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—Å–∫–æ–≤
plt.figure(figsize=(10, 6))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("–ú–∞—Ç—Ä–∏—Ü–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤")
plt.show()

### 3. –ê–ù–ê–õ–ò–ó –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ô –¢–ê–†–ì–ï–¢–û–í
target_cols = ['IC50, mM', 'CC50, mM', 'SI']
for col in target_cols:
    plt.figure()
    sns.histplot(df[col], bins=30, kde=True)
    plt.title(f"üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ {col}")
    plt.xlabel(col)
    plt.ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–º–µ—â—ë–Ω–Ω–æ—Å—Ç—å (skew) –≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è—Ö
# - –≠—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–µ–π –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –ª–æ–≥-–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π

### 4. –ö–û–†–†–ï–õ–Ø–¶–ò–ò –ú–ï–ñ–î–£ –¢–ê–†–ì–ï–¢–ê–ú–ò
plt.figure()
sns.heatmap(df[target_cols].corr(), annot=True, cmap='coolwarm')
plt.title("üîó –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É IC50, CC50 –∏ SI")
plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –í—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è ‚Üí –≤–æ–∑–º–æ–∂–Ω–∞ –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç—å
# - –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π

### 5. –ö–û–†–†–ï–õ–Ø–¶–ò–û–ù–ù–ê–Ø –ú–ê–¢–†–ò–¶–ê –í–°–ï–• –ü–†–ò–ó–ù–ê–ö–û–í
corr_matrix = df.corr(numeric_only=True)
high_corr = corr_matrix[target_cols].drop(index=target_cols)
top_corr = high_corr.abs().sort_values(by='SI', ascending=False).head(10)

print("\nüîé –¢–æ–ø –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å SI:")
print(top_corr)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:
for target in target_cols:
    top_feats = corr_matrix[target].drop(target).abs().sort_values(ascending=False).head(10)
    plt.figure(figsize=(10, 6))
    sns.barplot(x=top_feats.values, y=top_feats.index)
    plt.title(f"üìå –¢–æ–ø 10 –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å {target}")
    plt.xlabel("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è")
    plt.ylabel("–ü—Ä–∏–∑–Ω–∞–∫")
    plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –≠—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏–º–µ—é—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é –ª–∏–Ω–µ–π–Ω—É—é —Å–≤—è–∑—å —Å —Ç–∞—Ä–≥–µ—Ç–æ–º
# - –û–Ω–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã –¥–ª—è –º–æ–¥–µ–ª–µ–π

### 6. –í–´–ë–†–û–°–´ (OUTLIERS)
for col in target_cols:
    plt.figure()
    sns.boxplot(x=df[col])
    plt.title(f"üì¶ Boxplot –¥–ª—è {col}")
    plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –∞–Ω–æ–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–µ/–Ω–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
# - –¢–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å

### 7. –í–ó–ê–ò–ú–û–°–í–Ø–ó–ò –ú–ï–ñ–î–£ –¢–ê–†–ì–ï–¢–ê–ú–ò
sns.pairplot(df[target_cols])
plt.suptitle("üë• –ü–∞—Ä–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É IC50, CC50 –∏ SI", y=1.02)
plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö –≤–∑–∞–∏–º–æ—Å–≤—è–∑–µ–π

### 8. –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ö–õ–ê–°–°–û–í –î–õ–Ø –ó–ê–î–ê–ß –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–ò
df["IC50>median"] = (df["IC50, mM"] > df["IC50, mM"].median()).astype(int)
df["CC50>median"] = (df["CC50, mM"] > df["CC50, mM"].median()).astype(int)
df["SI>median"] = (df["SI"] > df["SI"].median()).astype(int)
df["SI>8"] = (df["SI"] > 8).astype(int)

class_targets = ["IC50>median", "CC50>median", "SI>median", "SI>8"]

for col in class_targets:
    sns.countplot(x=df[col])
    plt.title(f"‚öñÔ∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è {col}")
    plt.xlabel("–ö–ª–∞—Å—Å")
    plt.ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∏—Å–±–∞–ª–∞–Ω—Å –∫–ª–∞—Å—Å–æ–≤, –≤–∞–∂–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ (AUC, F1 –∏ –ø—Ä.)

### 9. –õ–û–ì–ê–†–ò–§–ú–ò–†–û–í–ê–ù–ù–´–ï –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–Ø (–µ—Å–ª–∏ –ø–µ—Ä–µ–∫–æ—à–µ–Ω–Ω—ã–µ)
for col in target_cols:
    plt.figure()
    sns.histplot(np.log1p(df[col]), bins=30, kde=True)
    plt.title(f"üìâ –õ–æ–≥-–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è {col}")
    plt.xlabel(f"log1p({col})")
    plt.show()

# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
# - –ï—Å–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—è–∂—ë–ª—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω–æ —Å–º–µ—â–µ–Ω—ã ‚Äî –ª–æ–≥-–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–∞–µ—Ç –º–æ–¥–µ–ª–∏

print("\n‚úÖ EDA –∑–∞–≤–µ—Ä—à—ë–Ω. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—é –º–æ–¥–µ–ª–µ–π.")
